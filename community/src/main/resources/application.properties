#给一个配置类ServerProperties注入数据
server.port=8080
server.servlet.context-path=/community

spring.thymeleaf.cache=false

# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=1234
#连接池的配置，统一管理连接的工厂，可以复用，效率高
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
#映射文件存放位置，编译后存放于target->classes->mapper->*.xml
mybatis.mapper-locations=classpath:mapper/*.xml
#封装表里的数据的实体类所在的包名
mybatis.type-aliases-package=com.nowcoder.community.entity
#启用自动生成主键（id自增长）
mybatis.configuration.use-generated-keys=true
#表内字段不区分大小写（header_url, headerUrl）
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger
#logging.level.com.nowcoder.community=debug
#logger.file=C:/workspace/project/data/nowcoder/community.log

#MailProperties
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=2621226480@qq.com
spring.mail.password=zlfujzumnowadieh
spring.mail.protocol=smtps
spring.mail.properties.mail.smpt.ssl.enable=true

#Community
community.path.domain=http://localhost:8080
community.path.upload=C:/workspace/project/data/upload

#RedisProperties
spring.redis.database=11
spring.redis.host=localhost
spring.redia.port=6379

#KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000

#ElasticsearchProperties
spring.data.elasticsearch.cluster-name=nowcoder
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
# 配置Spring普通线程池
# TaskExecutionProperties
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=100
# 配置Spring定时任务线程池
# TaskSchedulingProperties
spring.task.scheduling.pool.size=5

# 配置之后数据（JobDetail、Trigger等）会存到数据库当中，不配置存到内存中
# QuartzProperties
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5

# wk
wk.image.command=C:/software/wkhtmltopdf/bin/wkhtmltoimage
wk.image.storage=C:/workspace/project/data/wk-images